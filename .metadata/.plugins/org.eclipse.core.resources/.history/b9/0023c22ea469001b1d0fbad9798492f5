package br.com.rruffer.cadastro.beneficio.config;

import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.connection.RabbitConnectionFactoryBean;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;
import org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ConfigJms {
	
	private static final String QUEUE_NAME = "calculo.aposentadoria";
	private static final String EXCHANGE_NAME = "";
	@Value("${spring.activemq.broker-url}")
	private String brokerUrl;

	@Bean
	public Queue createQueue() {
		return new Queue(QUEUE_NAME, false);
	}
	
	@Bean
	public TopicExchange exchange() {
		return new TopicExchange(EXCHANGE_NAME);
	}
	
	@Bean
	public Binding binding(Queue queue, TopicExchange topicExchange) {
		return BindingBuilder.bind(queue).to(topicExchange).with("");
	}
	
	@Bean
	public SimpleMessageListenerContainer container(ConnectionFactory factory, MessageListenerAdapter adapter) {
		
		SimpleMessageListenerContainer container = new SimpleMessageListenerContainer(factory);
		container.setQueueNames(QUEUE_NAME);
		container.setMessageListener(adapter);
		return container;
		
	}
	
	@Bean
	public MessageListenerAdapter listenerAdapter() {
		
	}
	
	/*@Bean // Serialize message content to json using TextMessage
	public MessageConverter jacksonJmsMessageConverter() {
	    MappingJackson2MessageConverter converter = new MappingJackson2MessageConverter();
	    converter.setTargetType(MessageType.TEXT);
	    converter.setTypeIdPropertyName("_type");
	    return converter;
	}*/
}
